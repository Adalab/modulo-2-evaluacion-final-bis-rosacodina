{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\nconsole.log('>> Ready :)');\n//CONSTANTS\n\nconst usersList = document.querySelector('.js__usersList');\n\n////////cuando la pag cargue que se haga una peticion a la api con fecth, relleno un arrya con lo que devuelva la api. funcion que caundo la web cargue que se imprima consola \"he cargado\" y caundo eso pase meto el fecth y luego lo meto en la lista y despuÃ©s inteno implementar el onloa\n//VARIABLES\nlet users = [{}];\n\n//FUNCTIONS\n\n/////////Function to refresh the web and then the list is reload again and again\nfunction myFunction() {\n  alert('Page in load');\n  console.log('carga');\n}\n\n/* FOR cadaElementoDemilista OF milista{\n\n    cadaElementoDemilista\n}\n\nlet html = \" \";\n\nhtml += \"h1\";\nhtml +=\"h2\"\n\n*/\n\n//////////////I used fetch to take the data from an external site\nfunction fetchApi() {\n  fetch('https://randomuser.me/api/?results=10')\n    .then((response) => response.json())\n    .then((data) => {\n      users = data.results;\n      console.log(users);\n      paintUsers();\n    });\n}\n\nfunction listenAtUsers() {\n  //function in which I put an AddEventListener to know what user is chosen by the user.\n  const userButton = document.querySelectorAll('.js__user');\n  for (const item of userButton) {\n    item.addEventListener('click', handleClicUser);\n  }\n}\n\nfunction paintUsers() {\n  //To paint or\n  let html = '';\n  //////for to go through the array\n  for (const item of users) {\n    html += `_____________________________________________`;\n    html += `<li class=\"js__user\" id=\"${item.login.uuid}\">`;\n    html += `<img src=\"${item.picture.medium}\"</image>`;\n    html += `<h2> Nombre: ${item.name.first}  ${item.name.last}</h2>`;\n    html += `<h2>Nombre de usuario: ${item.login.username}</h2>`;\n    html += `<h2> Ciudad: ${item.location.city}</h2>`;\n    html += `</li>`;\n    html += `</div>`;\n    html += `_____________________________________________`;\n    /////////////In my ul  I brought from my HTML, I introduce the html of the let variable\n  }\n  usersList.innerHTML = html;\n  listenAtUsers();\n}\n\n//Here I get what user has clicked to\n//Find searches the element in the list, it returns the element\n//FinIndex searches the position element in the list, it returns the position in which the element is inside the list\n/*const userFound = favouriteList.find((fav) => {\n    return fav.id === idUserSelected;\n  });*/\n\nconst favouriteList = [];\n\nfunction handleClicUser(event) {\n  console.log(event.currentTarget.id);\n  const idUserSelected = event.currentTarget.id;\n  console.log('Id clicado: ' + idUserSelected);\n\n  const idFavouriteList = favouriteList.find(\n    (element) => element === idUserSelected\n  );\n  console.log('Id encontrado en la lista de fav ' + idFavouriteList);\n\n  if ((idFavouriteList = undefined)) {\n    favouriteList.push(idUserSelected);\n    //It goes over here in case the ifFound has an element/value\n  } else {\n    const index = favouriteList.indexOf(idFound);\n    console.log('Indice: ' + index);\n    favouriteList.splice(index, 1);\n  }\n\n  console.log(favouriteList);\n  console.log('----------------------');\n}\n\n//I have to put the selected user into the saved list\n//my userClicked is favouriteFound Yanelis\nconst userClickedFound = users.find((fav) => {\n  return favouriteList.id === idUserSelected;\n});\n\nconst userClickedIndex = favouriteList.findIndex((fav) => {\n  return favouriteList.id == idUserSelected;\n});\n\nif (userClickedIndex === -1) {\n  //Here I say that it was not found\n  favouriteList.push(userClickedFound);\n} else {\n  favouriteList != userClickedFound;\n}\n\n/* const userFoundIndex = favouriteList.findIndex((fav) => {\n    return fav.id === idUserSelected;\n  });\n\n  if (userFoundIndex === -1) {\n    favouriteList.push(userFound);\n  } else {\n    //splice delete an element from an list given the index in which it is, this means the position in which that element is in the list.\n    favouriteList.splice(favouriteFoundIndex, 1);\n  }*/\n"]}